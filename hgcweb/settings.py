"""
Django settings for hgcweb project.

Generated by 'django-admin startproject' using Django 4.1.18.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



import os
import configparser

config = configparser.ConfigParser()
config.read('config.ini')

APPLICATION_DIR = os.path.dirname(globals()['__file__'])
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
DATA_UPLOAD_MAX_NUMBER_FIELDS = None


DB_NAME     = config['HGC_INT2R']['NAME']
DB_ACCOUNT  = config['HGC_INT2R']['ACCOUNT']
DB_PASSWORD = config['HGC_INT2R']['PASSWORD']
PROXY_PATH  = config['HGC_INT2R']['PROXY_PATH']




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xjtw_ay#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost','hgcweb-dev.cern.ch']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'base',
    'simodules',
    'scitiles',
    'cassettes',
    'logistics'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'base.middleware.oauth.OAuthMiddleware',
]

ROOT_URLCONF = 'hgcweb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join(BASE_DIR, 'templates') ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hgcweb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'construct-dev':{
        'ENGINE': 'django.db.backends.oracle',
        'NAME': DB_NAME,
        'USER': f'{DB_ACCOUNT}', 
        'PASSWORD': DB_PASSWORD, 
        'TEST': {
            'MIRROR': 'construct-dev',
        },
        'TIME_ZONE': 'Etc/GMT-1'
    }
}


SCHEMAS = {
    'core_construct':  f'CMS_HGC_CORE_CONSTRUCT', 
    'core_management': f'CMS_HGC_CORE_MANAGEMNT', 
    'core_condition':  f'CMS_HGC_CORE_COND',
    'core_attribute':  f'CMS_HGC_CORE_ATTRIBUTE',
    'det_conditions':  f'CMS_HGC_HGCAL_COND',
    'det_views':       f'CMS_HGC_HGCAL_VIEW',
    'det_construct':   f'CMS_HGC_HGCAL_CONSTRUCT'
}

DATABASE_ROUTERS = [
    'base.routers.MainDBRouter',
]


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


MEDIA_URL= '/media/'
MEDIFILES_DIRS = (
        os.path.join(BASE_DIR, 'media'),
)
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Admin page
ADMIN_ENABLED = False



# ---OAuth With custom middleware
OAUTH_URL_WHITELISTS = []
OAUTH_CLIENT_NAME = 'cern'
OAUTH_CLIENT = {
    'client_id': '',
    'client_secret': '',
    'issuer':'https://keycloak-qa.cern.ch/auth/realms/cern',
    'access_token_url': 'https://keycloak-qa.cern.ch/auth/realms/cern/protocol/openid-connect/token',
    'authorize_url': 'https://keycloak-qa.cern.ch/auth/realms/cern/protocol/openid-connect/auth',
    'userinfo_endpoint': 'https://keycloak-qa.cern.ch/auth/realms/cern/protocol/openid-connect/userinfo',
    'redirect_uri': 'http://hgcweb.cern.ch/oauth/callback',
    'jwks_uri':'https://keycloak-qa.cern.ch/auth/realms/cern/protocol/openid-connect/certs',
    # 'response_type': 'id_token',
    'post_logout_redirect_uri': '',
    'client_kwargs': {
        'scope': 'profile email openid',
        'token_placement': 'header'
    },
}
OAUTH_COOKIE_SESSION_ID = 'sso_session_id'
OAUTH_LOGOUT = 'https://keycloak-qa.cern.ch/auth/realms/cern/protocol/openid-connect/logout'



